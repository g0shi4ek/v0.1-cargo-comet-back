// protos/comet_orbit.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v6.30.0
// source: proto/comet_orbit.proto

package cometorbit

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Одно наблюдение
type Observation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TimeUtc       string                 `protobuf:"bytes,1,opt,name=time_utc,json=timeUtc,proto3" json:"time_utc,omitempty"` // "YYYY-MM-DD HH:MM:SS"
	RaDeg         float64                `protobuf:"fixed64,2,opt,name=ra_deg,json=raDeg,proto3" json:"ra_deg,omitempty"`     // Прямое восхождение в градусах
	DecDeg        float64                `protobuf:"fixed64,3,opt,name=dec_deg,json=decDeg,proto3" json:"dec_deg,omitempty"`  // Склонение в градусах
	IsHorizontal  bool                   `protobuf:"varint,4,opt,name=isHorizontal,proto3" json:"isHorizontal,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Observation) Reset() {
	*x = Observation{}
	mi := &file_proto_comet_orbit_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Observation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Observation) ProtoMessage() {}

func (x *Observation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_comet_orbit_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Observation.ProtoReflect.Descriptor instead.
func (*Observation) Descriptor() ([]byte, []int) {
	return file_proto_comet_orbit_proto_rawDescGZIP(), []int{0}
}

func (x *Observation) GetTimeUtc() string {
	if x != nil {
		return x.TimeUtc
	}
	return ""
}

func (x *Observation) GetRaDeg() float64 {
	if x != nil {
		return x.RaDeg
	}
	return 0
}

func (x *Observation) GetDecDeg() float64 {
	if x != nil {
		return x.DecDeg
	}
	return 0
}

func (x *Observation) GetIsHorizontal() bool {
	if x != nil {
		return x.IsHorizontal
	}
	return false
}

// Запрос, содержащий список наблюдений
type ObservationsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Observations  []*Observation         `protobuf:"bytes,1,rep,name=observations,proto3" json:"observations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ObservationsRequest) Reset() {
	*x = ObservationsRequest{}
	mi := &file_proto_comet_orbit_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ObservationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObservationsRequest) ProtoMessage() {}

func (x *ObservationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_comet_orbit_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObservationsRequest.ProtoReflect.Descriptor instead.
func (*ObservationsRequest) Descriptor() ([]byte, []int) {
	return file_proto_comet_orbit_proto_rawDescGZIP(), []int{1}
}

func (x *ObservationsRequest) GetObservations() []*Observation {
	if x != nil {
		return x.Observations
	}
	return nil
}

// Ответ с 6 кеплеровскими элементами
type KeplerianElementsResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	SemiMajorAxisAu   float64                `protobuf:"fixed64,1,opt,name=semi_major_axis_au,json=semiMajorAxisAu,proto3" json:"semi_major_axis_au,omitempty"`
	Eccentricity      float64                `protobuf:"fixed64,2,opt,name=eccentricity,proto3" json:"eccentricity,omitempty"`
	InclinationDeg    float64                `protobuf:"fixed64,3,opt,name=inclination_deg,json=inclinationDeg,proto3" json:"inclination_deg,omitempty"`
	RaanDeg           float64                `protobuf:"fixed64,4,opt,name=raan_deg,json=raanDeg,proto3" json:"raan_deg,omitempty"` // Longitude of ascending node
	ArgOfPeriapsisDeg float64                `protobuf:"fixed64,5,opt,name=arg_of_periapsis_deg,json=argOfPeriapsisDeg,proto3" json:"arg_of_periapsis_deg,omitempty"`
	TrueAnomalyDeg    float64                `protobuf:"fixed64,6,opt,name=true_anomaly_deg,json=trueAnomalyDeg,proto3" json:"true_anomaly_deg,omitempty"`
	EpochJd           string                 `protobuf:"bytes,7,opt,name=epoch_jd,json=epochJd,proto3" json:"epoch_jd,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *KeplerianElementsResponse) Reset() {
	*x = KeplerianElementsResponse{}
	mi := &file_proto_comet_orbit_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeplerianElementsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeplerianElementsResponse) ProtoMessage() {}

func (x *KeplerianElementsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_comet_orbit_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeplerianElementsResponse.ProtoReflect.Descriptor instead.
func (*KeplerianElementsResponse) Descriptor() ([]byte, []int) {
	return file_proto_comet_orbit_proto_rawDescGZIP(), []int{2}
}

func (x *KeplerianElementsResponse) GetSemiMajorAxisAu() float64 {
	if x != nil {
		return x.SemiMajorAxisAu
	}
	return 0
}

func (x *KeplerianElementsResponse) GetEccentricity() float64 {
	if x != nil {
		return x.Eccentricity
	}
	return 0
}

func (x *KeplerianElementsResponse) GetInclinationDeg() float64 {
	if x != nil {
		return x.InclinationDeg
	}
	return 0
}

func (x *KeplerianElementsResponse) GetRaanDeg() float64 {
	if x != nil {
		return x.RaanDeg
	}
	return 0
}

func (x *KeplerianElementsResponse) GetArgOfPeriapsisDeg() float64 {
	if x != nil {
		return x.ArgOfPeriapsisDeg
	}
	return 0
}

func (x *KeplerianElementsResponse) GetTrueAnomalyDeg() float64 {
	if x != nil {
		return x.TrueAnomalyDeg
	}
	return 0
}

func (x *KeplerianElementsResponse) GetEpochJd() string {
	if x != nil {
		return x.EpochJd
	}
	return ""
}

// Ответ с информацией о сближении
type ClosestApproachResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TimeUtc       string                 `protobuf:"bytes,1,opt,name=time_utc,json=timeUtc,proto3" json:"time_utc,omitempty"`
	DistanceAu    float64                `protobuf:"fixed64,2,opt,name=distance_au,json=distanceAu,proto3" json:"distance_au,omitempty"`
	DistanceKm    float64                `protobuf:"fixed64,3,opt,name=distance_km,json=distanceKm,proto3" json:"distance_km,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClosestApproachResponse) Reset() {
	*x = ClosestApproachResponse{}
	mi := &file_proto_comet_orbit_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClosestApproachResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClosestApproachResponse) ProtoMessage() {}

func (x *ClosestApproachResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_comet_orbit_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClosestApproachResponse.ProtoReflect.Descriptor instead.
func (*ClosestApproachResponse) Descriptor() ([]byte, []int) {
	return file_proto_comet_orbit_proto_rawDescGZIP(), []int{3}
}

func (x *ClosestApproachResponse) GetTimeUtc() string {
	if x != nil {
		return x.TimeUtc
	}
	return ""
}

func (x *ClosestApproachResponse) GetDistanceAu() float64 {
	if x != nil {
		return x.DistanceAu
	}
	return 0
}

func (x *ClosestApproachResponse) GetDistanceKm() float64 {
	if x != nil {
		return x.DistanceKm
	}
	return 0
}

// Запрос на расчет траектории
type TrajectoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Observations  *ObservationsRequest   `protobuf:"bytes,1,opt,name=observations,proto3" json:"observations,omitempty"`                       // Наблюдения для расчета орбиты
	StartTimeUtc  string                 `protobuf:"bytes,2,opt,name=start_time_utc,json=startTimeUtc,proto3" json:"start_time_utc,omitempty"` // Начало периода для расчета траектории
	EndTimeUtc    string                 `protobuf:"bytes,3,opt,name=end_time_utc,json=endTimeUtc,proto3" json:"end_time_utc,omitempty"`       // Конец периода
	NumPoints     int32                  `protobuf:"varint,4,opt,name=num_points,json=numPoints,proto3" json:"num_points,omitempty"`           // Количество точек на траектории
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TrajectoryRequest) Reset() {
	*x = TrajectoryRequest{}
	mi := &file_proto_comet_orbit_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrajectoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrajectoryRequest) ProtoMessage() {}

func (x *TrajectoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_comet_orbit_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrajectoryRequest.ProtoReflect.Descriptor instead.
func (*TrajectoryRequest) Descriptor() ([]byte, []int) {
	return file_proto_comet_orbit_proto_rawDescGZIP(), []int{4}
}

func (x *TrajectoryRequest) GetObservations() *ObservationsRequest {
	if x != nil {
		return x.Observations
	}
	return nil
}

func (x *TrajectoryRequest) GetStartTimeUtc() string {
	if x != nil {
		return x.StartTimeUtc
	}
	return ""
}

func (x *TrajectoryRequest) GetEndTimeUtc() string {
	if x != nil {
		return x.EndTimeUtc
	}
	return ""
}

func (x *TrajectoryRequest) GetNumPoints() int32 {
	if x != nil {
		return x.NumPoints
	}
	return 0
}

// Одна точка траектории
type TrajectoryPoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TimeUtc       string                 `protobuf:"bytes,1,opt,name=time_utc,json=timeUtc,proto3" json:"time_utc,omitempty"`
	XAu           float64                `protobuf:"fixed64,2,opt,name=x_au,json=xAu,proto3" json:"x_au,omitempty"` // Гелиоцентрические координаты
	YAu           float64                `protobuf:"fixed64,3,opt,name=y_au,json=yAu,proto3" json:"y_au,omitempty"`
	ZAu           float64                `protobuf:"fixed64,4,opt,name=z_au,json=zAu,proto3" json:"z_au,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TrajectoryPoint) Reset() {
	*x = TrajectoryPoint{}
	mi := &file_proto_comet_orbit_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrajectoryPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrajectoryPoint) ProtoMessage() {}

func (x *TrajectoryPoint) ProtoReflect() protoreflect.Message {
	mi := &file_proto_comet_orbit_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrajectoryPoint.ProtoReflect.Descriptor instead.
func (*TrajectoryPoint) Descriptor() ([]byte, []int) {
	return file_proto_comet_orbit_proto_rawDescGZIP(), []int{5}
}

func (x *TrajectoryPoint) GetTimeUtc() string {
	if x != nil {
		return x.TimeUtc
	}
	return ""
}

func (x *TrajectoryPoint) GetXAu() float64 {
	if x != nil {
		return x.XAu
	}
	return 0
}

func (x *TrajectoryPoint) GetYAu() float64 {
	if x != nil {
		return x.YAu
	}
	return 0
}

func (x *TrajectoryPoint) GetZAu() float64 {
	if x != nil {
		return x.ZAu
	}
	return 0
}

// Ответ с траекторией (для кометы и Земли)
type TrajectoryResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	CometTrajectory []*TrajectoryPoint     `protobuf:"bytes,1,rep,name=comet_trajectory,json=cometTrajectory,proto3" json:"comet_trajectory,omitempty"`
	EarthTrajectory []*TrajectoryPoint     `protobuf:"bytes,2,rep,name=earth_trajectory,json=earthTrajectory,proto3" json:"earth_trajectory,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TrajectoryResponse) Reset() {
	*x = TrajectoryResponse{}
	mi := &file_proto_comet_orbit_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrajectoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrajectoryResponse) ProtoMessage() {}

func (x *TrajectoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_comet_orbit_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrajectoryResponse.ProtoReflect.Descriptor instead.
func (*TrajectoryResponse) Descriptor() ([]byte, []int) {
	return file_proto_comet_orbit_proto_rawDescGZIP(), []int{6}
}

func (x *TrajectoryResponse) GetCometTrajectory() []*TrajectoryPoint {
	if x != nil {
		return x.CometTrajectory
	}
	return nil
}

func (x *TrajectoryResponse) GetEarthTrajectory() []*TrajectoryPoint {
	if x != nil {
		return x.EarthTrajectory
	}
	return nil
}

var File_proto_comet_orbit_proto protoreflect.FileDescriptor

var file_proto_comet_orbit_proto_rawDesc = string([]byte{
	0x0a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x65, 0x74, 0x5f, 0x6f, 0x72,
	0x62, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x63, 0x6f, 0x6d, 0x65, 0x74,
	0x6f, 0x72, 0x62, 0x69, 0x74, 0x22, 0x7c, 0x0a, 0x0b, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x74, 0x63,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x55, 0x74, 0x63, 0x12,
	0x15, 0x0a, 0x06, 0x72, 0x61, 0x5f, 0x64, 0x65, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x05, 0x72, 0x61, 0x44, 0x65, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x65, 0x63, 0x5f, 0x64, 0x65,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x64, 0x65, 0x63, 0x44, 0x65, 0x67, 0x12,
	0x22, 0x0a, 0x0c, 0x69, 0x73, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e,
	0x74, 0x61, 0x6c, 0x22, 0x52, 0x0a, 0x13, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0c, 0x6f, 0x62,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x65, 0x74, 0x6f, 0x72, 0x62, 0x69, 0x74, 0x2e, 0x4f, 0x62,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x6f, 0x62, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xa6, 0x02, 0x0a, 0x19, 0x4b, 0x65, 0x70, 0x6c,
	0x65, 0x72, 0x69, 0x61, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x12, 0x73, 0x65, 0x6d, 0x69, 0x5f, 0x6d, 0x61,
	0x6a, 0x6f, 0x72, 0x5f, 0x61, 0x78, 0x69, 0x73, 0x5f, 0x61, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0f, 0x73, 0x65, 0x6d, 0x69, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x41, 0x78, 0x69, 0x73,
	0x41, 0x75, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x63, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x63, 0x69,
	0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x65, 0x63, 0x63, 0x65, 0x6e, 0x74,
	0x72, 0x69, 0x63, 0x69, 0x74, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x63, 0x6c, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0e, 0x69, 0x6e, 0x63, 0x6c, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x67, 0x12,
	0x19, 0x0a, 0x08, 0x72, 0x61, 0x61, 0x6e, 0x5f, 0x64, 0x65, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x07, 0x72, 0x61, 0x61, 0x6e, 0x44, 0x65, 0x67, 0x12, 0x2f, 0x0a, 0x14, 0x61, 0x72,
	0x67, 0x5f, 0x6f, 0x66, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x61, 0x70, 0x73, 0x69, 0x73, 0x5f, 0x64,
	0x65, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x61, 0x72, 0x67, 0x4f, 0x66, 0x50,
	0x65, 0x72, 0x69, 0x61, 0x70, 0x73, 0x69, 0x73, 0x44, 0x65, 0x67, 0x12, 0x28, 0x0a, 0x10, 0x74,
	0x72, 0x75, 0x65, 0x5f, 0x61, 0x6e, 0x6f, 0x6d, 0x61, 0x6c, 0x79, 0x5f, 0x64, 0x65, 0x67, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x74, 0x72, 0x75, 0x65, 0x41, 0x6e, 0x6f, 0x6d, 0x61,
	0x6c, 0x79, 0x44, 0x65, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x6a,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x4a, 0x64,
	0x22, 0x76, 0x0a, 0x17, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x73, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x61, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x75, 0x74, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74,
	0x69, 0x6d, 0x65, 0x55, 0x74, 0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x5f, 0x61, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x64, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x75, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x6b, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x64, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4b, 0x6d, 0x22, 0xbf, 0x01, 0x0a, 0x11, 0x54, 0x72, 0x61,
	0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43,
	0x0a, 0x0c, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x65, 0x74, 0x6f, 0x72, 0x62, 0x69,
	0x74, 0x2e, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0c, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x75, 0x74, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x74, 0x63, 0x12, 0x20, 0x0a, 0x0c, 0x65, 0x6e, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x74, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x74, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x6e,
	0x75, 0x6d, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x6e, 0x75, 0x6d, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x65, 0x0a, 0x0f, 0x54, 0x72,
	0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75, 0x74, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x74, 0x69, 0x6d, 0x65, 0x55, 0x74, 0x63, 0x12, 0x11, 0x0a, 0x04, 0x78, 0x5f, 0x61, 0x75,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x78, 0x41, 0x75, 0x12, 0x11, 0x0a, 0x04, 0x79,
	0x5f, 0x61, 0x75, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x79, 0x41, 0x75, 0x12, 0x11,
	0x0a, 0x04, 0x7a, 0x5f, 0x61, 0x75, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x7a, 0x41,
	0x75, 0x22, 0xa4, 0x01, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x65,
	0x74, 0x5f, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x65, 0x74, 0x6f, 0x72, 0x62, 0x69, 0x74, 0x2e,
	0x54, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52,
	0x0f, 0x63, 0x6f, 0x6d, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x12, 0x46, 0x0a, 0x10, 0x65, 0x61, 0x72, 0x74, 0x68, 0x5f, 0x74, 0x72, 0x61, 0x6a, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6d,
	0x65, 0x74, 0x6f, 0x72, 0x62, 0x69, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0f, 0x65, 0x61, 0x72, 0x74, 0x68, 0x54, 0x72,
	0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x32, 0xa0, 0x02, 0x0a, 0x0c, 0x4f, 0x72, 0x62,
	0x69, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x64, 0x0a, 0x1a, 0x43, 0x61, 0x6c,
	0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x70, 0x6c, 0x65, 0x72, 0x69, 0x61, 0x6e, 0x45,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x65, 0x74, 0x6f,
	0x72, 0x62, 0x69, 0x74, 0x2e, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x63, 0x6f, 0x6d, 0x65, 0x74,
	0x6f, 0x72, 0x62, 0x69, 0x74, 0x2e, 0x4b, 0x65, 0x70, 0x6c, 0x65, 0x72, 0x69, 0x61, 0x6e, 0x45,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5a, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x73, 0x74, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x61, 0x63, 0x68, 0x12, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x65, 0x74, 0x6f, 0x72, 0x62,
	0x69, 0x74, 0x2e, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x65, 0x74, 0x6f, 0x72,
	0x62, 0x69, 0x74, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x73, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x61, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x54, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1d, 0x2e, 0x63,
	0x6f, 0x6d, 0x65, 0x74, 0x6f, 0x72, 0x62, 0x69, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x6a, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x63, 0x6f,
	0x6d, 0x65, 0x74, 0x6f, 0x72, 0x62, 0x69, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x6a, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x52, 0x5a, 0x50, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x30, 0x73, 0x68, 0x69, 0x34,
	0x65, 0x6b, 0x2f, 0x76, 0x30, 0x2e, 0x31, 0x2d, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x2d, 0x63, 0x6f,
	0x6d, 0x65, 0x74, 0x2d, 0x62, 0x61, 0x63, 0x6b, 0x2f, 0x63, 0x6f, 0x6d, 0x65, 0x74, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f,
	0x67, 0x72, 0x70, 0x63, 0x2f, 0x63, 0x6f, 0x6d, 0x65, 0x74, 0x6f, 0x72, 0x62, 0x69, 0x74, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_proto_comet_orbit_proto_rawDescOnce sync.Once
	file_proto_comet_orbit_proto_rawDescData []byte
)

func file_proto_comet_orbit_proto_rawDescGZIP() []byte {
	file_proto_comet_orbit_proto_rawDescOnce.Do(func() {
		file_proto_comet_orbit_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_comet_orbit_proto_rawDesc), len(file_proto_comet_orbit_proto_rawDesc)))
	})
	return file_proto_comet_orbit_proto_rawDescData
}

var file_proto_comet_orbit_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_proto_comet_orbit_proto_goTypes = []any{
	(*Observation)(nil),               // 0: cometorbit.Observation
	(*ObservationsRequest)(nil),       // 1: cometorbit.ObservationsRequest
	(*KeplerianElementsResponse)(nil), // 2: cometorbit.KeplerianElementsResponse
	(*ClosestApproachResponse)(nil),   // 3: cometorbit.ClosestApproachResponse
	(*TrajectoryRequest)(nil),         // 4: cometorbit.TrajectoryRequest
	(*TrajectoryPoint)(nil),           // 5: cometorbit.TrajectoryPoint
	(*TrajectoryResponse)(nil),        // 6: cometorbit.TrajectoryResponse
}
var file_proto_comet_orbit_proto_depIdxs = []int32{
	0, // 0: cometorbit.ObservationsRequest.observations:type_name -> cometorbit.Observation
	1, // 1: cometorbit.TrajectoryRequest.observations:type_name -> cometorbit.ObservationsRequest
	5, // 2: cometorbit.TrajectoryResponse.comet_trajectory:type_name -> cometorbit.TrajectoryPoint
	5, // 3: cometorbit.TrajectoryResponse.earth_trajectory:type_name -> cometorbit.TrajectoryPoint
	1, // 4: cometorbit.OrbitService.CalculateKeplerianElements:input_type -> cometorbit.ObservationsRequest
	1, // 5: cometorbit.OrbitService.GetClosestApproach:input_type -> cometorbit.ObservationsRequest
	4, // 6: cometorbit.OrbitService.GetTrajectory:input_type -> cometorbit.TrajectoryRequest
	2, // 7: cometorbit.OrbitService.CalculateKeplerianElements:output_type -> cometorbit.KeplerianElementsResponse
	3, // 8: cometorbit.OrbitService.GetClosestApproach:output_type -> cometorbit.ClosestApproachResponse
	6, // 9: cometorbit.OrbitService.GetTrajectory:output_type -> cometorbit.TrajectoryResponse
	7, // [7:10] is the sub-list for method output_type
	4, // [4:7] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_proto_comet_orbit_proto_init() }
func file_proto_comet_orbit_proto_init() {
	if File_proto_comet_orbit_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_comet_orbit_proto_rawDesc), len(file_proto_comet_orbit_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_comet_orbit_proto_goTypes,
		DependencyIndexes: file_proto_comet_orbit_proto_depIdxs,
		MessageInfos:      file_proto_comet_orbit_proto_msgTypes,
	}.Build()
	File_proto_comet_orbit_proto = out.File
	file_proto_comet_orbit_proto_goTypes = nil
	file_proto_comet_orbit_proto_depIdxs = nil
}
